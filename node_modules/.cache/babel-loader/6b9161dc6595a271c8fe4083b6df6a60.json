{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.injectStyles = injectStyles;\nexports.removeStyle = removeStyle;\nexports.removeAllStyles = removeAllStyles;\n\nexports.default = function (styleId, style, pseudoClass, disabled) {\n  injectStyleTag();\n  updateStore(styleId, style, pseudoClass, disabled);\n  updateStyling();\n};\n\nvar _helpers = require('../utils/helpers');\n\nvar _CSSPropertyOperations = require('react-dom/lib/CSSPropertyOperations');\n\nvar _CSSPropertyOperations2 = _interopRequireDefault(_CSSPropertyOperations);\n\nvar _exenv = require('exenv');\n\nvar _animations = require('../style/animations');\n\nvar _animations2 = _interopRequireDefault(_animations);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar styleElement = void 0;\nvar styleStorage = {};\n/**\n * Injects the provided style into the styleStore.\n */\n\nfunction injectStyleTag() {\n  if (!styleElement && _exenv.canUseDOM) {\n    styleElement = document.createElement('style');\n    document.body.appendChild(styleElement);\n    styleElement.setAttribute('class', 'belle-style');\n  }\n}\n/**\n * Injects the provided style into the styleStore.\n */\n\n\nfunction updateStore(styleId, style, pseudoClass, disabled) {\n  styleStorage[styleId] = styleStorage[styleId] || {};\n\n  if (disabled) {\n    styleStorage[styleId].disabledPseudoClasses = styleStorage[styleId].disabledPseudoClasses || {};\n    styleStorage[styleId].disabledPseudoClasses[pseudoClass] = style;\n  } else {\n    styleStorage[styleId].pseudoClasses = styleStorage[styleId].pseudoClasses || {};\n    styleStorage[styleId].pseudoClasses[pseudoClass] = style;\n  }\n}\n/**\n * Constructs all the stored styles & injects them to the DOM.\n */\n\n\nfunction createMarkupOnPseudoClass(pseudoClasses, id, disabled) {\n  return (0, _helpers.mapObject)(pseudoClasses, function (style, pseudoClass) {\n    if (style && Object.keys(style).length > 0) {\n      var styleString = _CSSPropertyOperations2.default.createMarkupForStyles(style);\n\n      var styleWithImportant = styleString.replace(/;/g, ' !important;');\n      return disabled ? '.' + id + '[disabled]:' + pseudoClass + ' {' + styleWithImportant + '}' : '.' + id + ':' + pseudoClass + ' {' + styleWithImportant + '}';\n    }\n\n    return undefined;\n  });\n}\n\nfunction updateStyling() {\n  var styles = (0, _helpers.mapObject)(styleStorage, function (storageEntry, id) {\n    var pseudoClassesArray = [];\n\n    if (storageEntry.pseudoClasses) {\n      pseudoClassesArray.push(createMarkupOnPseudoClass(storageEntry.pseudoClasses, id, false));\n    }\n\n    if (storageEntry.disabledPseudoClasses) {\n      pseudoClassesArray.push(createMarkupOnPseudoClass(storageEntry.disabledPseudoClasses, id, true));\n    }\n\n    return pseudoClassesArray;\n  });\n\n  if (styleElement) {\n    styleElement.innerHTML = (0, _helpers.flatten)([_animations2.default, styles]).join(' ');\n  }\n}\n/**\n * Injects a style tag and adds multiple passed styles.\n *\n * By using this function someone can make sure the DOM is updated only once.\n *\n * @example\n * ```\n * const styles = [\n *   {\n *     id: 'style-0.0.2',\n *     style: { color: '#F00' },\n *     pseudoClass: 'hover'\n *   }\n * ];\n * injectStyles(styles);\n * ```\n */\n\n\nfunction injectStyles(styles) {\n  injectStyleTag();\n  styles.forEach(function (style) {\n    updateStore(style.id, style.style, style.pseudoClass, style.disabled);\n  });\n  updateStyling();\n}\n/**\n * Removes all pseudoClass styles based on the provided styleId.\n */\n\n\nfunction removeStyle(styleId) {\n  delete styleStorage[styleId];\n  updateStyling();\n}\n/**\n * Removes all pseudoClass styles based on all provided styleIds.\n */\n\n\nfunction removeAllStyles(styleIds) {\n  styleIds.forEach(function (styleId) {\n    delete styleStorage[styleId];\n  });\n  updateStyling();\n}\n/**\n * Injects a style tag and adds the passed style for the provided pseudoClass.\n */","map":null,"metadata":{},"sourceType":"script"}